service: my-serverless-project

plugins:
  - serverless-auto-swagger
  - serverless-plugin-typescript
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  iamRoleStatements: 
    - Effect : Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:880993530241:table/MovieTable

custom: 
  autoswagger:
    typefiles: ['./src/types/movie.d.ts']
    basePath: '/dev'

functions:
  health:
    handler: dist/health.handler
    events:
      - http:
          path: health
          method: get
          
  createMovie:
    handler: dist/features/movie/functions/createMovie.handler
    events:
      - http:
          method: post 
          path: movie
          bodyType: CreateMovie
          swaggerTags: ['Movie']
          responses:
            200: "Movie created successfully"

  getMovie:
    handler: dist/features/movie/functions/getMovie.handler
    events:
      - http:
          method: get
          path: movie/{id}
          swaggerTags: ['Movie']
          responses:
            200: "Movie listed successfully"

  getMovies:
    handler: dist/features/movie/functions/getMovies.handler
    events:
      - http:
          method: get 
          path: movie
          swaggerTags: ['Movie']
          responses:
            200: "Movies listed successfully"

  updateMovie:
    handler: dist/features/movie/functions/updateMovie.handler
    events:
      - http:
          path: movie/{id}
          method: put 
          bodyType: UpdateMovie
          swaggerTags: ['Movie']
          responses:
            200: "Movie updated successfully"

  deleteMovie:
    handler: dist/features/movie/functions/deleteMovie.handler
    events:
      - http:
          path: movie/{id}
          method: delete
          swaggerTags: ['Movie']
          responses:
            200: "Movie deleted successfully"


  swapiGetCharacters:
    handler: dist/features/swapi/functions/getCharacter.handler
    events:
      - http:
          path: character/{id}
          method: get
          swaggerTags: ['Swapi']
          responses:
            200: "Get star wars's characters"

  swapiGetCharacter:
    handler: dist/features/swapi/functions/getCharacters.handler
    events:
      - http:
          path: character
          method: get
          swaggerTags: ['Swapi']
          responses:
            200: "Get star wars's character"

  swapiGetStarchipsByCharacter:
    handler: dist/features/swapi/functions/getStarshipsByCharacter.handler
    events:
      - http:
          path: starshipByCharacter/{id}
          method: get
          swaggerTags: ['Swapi']
          responses:
            200: "Get star wars's starchip by character"





resources:
  Resources:
    MovieTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: MovieTable
          BillingMode: PAY_PER_REQUEST
          AttributeDefinitions:
            - AttributeName : id
              AttributeType : S
          KeySchema:
            - AttributeName: id
              KeyType: HASH